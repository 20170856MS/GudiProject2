<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
         PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
         
<mapper namespace="com.iu.home.licensemembers.LicenseMembersDAO">
	
	
	<insert id="setJoin" parameterType="LicenseMembersDTO">
		INSERT INTO LICENSEMEMBERS
		VALUES(area_seq.nextval,#{areaName},#{userName},#{password},#{name},#{email},#{phone})
	</insert>
	
	<insert id="setRole" parameterType="LicenseMembersDTO">
		INSERT INTO LICENSEROLE
		VALUES(board_seq.nextval,#{userName},3)
	</insert>
	
	
	
	<select id="getMyPage" parameterType="LicenseMembersDTO" resultType="LicenseMembersDTO">
		SELECT USERNAME,NAME,EMAIL,PHONE FROM LICENSEMEMBERS WHERE USERNAME =#{userName}
	</select>
	
	<insert id="setSimpleJoin" parameterType="SimpleMembersDTO">
		INSERT INTO SIMPLEMEMBERS
		VALUES(area_seq.nextval,#{userName},#{email},#{phone})
	</insert>
	
	<select id="getsosialMyPage" parameterType="SimpleMembersDTO" resultType="SimpleMembersDTO">
		SELECT * FROM SIMPLEMEMBERS WHERE USERNAME =#{userName}
	</select>
	
	<!-- 이름으로 찾기 -->
	<select id="getNameCheck" parameterType="LicenseMembersDTO" resultType="LicenseMembersDTO">
		select name from licensemembers where name = #{name}
	</select>
	
	<select id="getFindId" parameterType="LicenseMembersDTO" resultType="LicenseMembersDTO">	
		select USERNAME from licensemembers where email = #{email}
	</select>
	
	
	

	<select id="getLogin" parameterType="LicenseMembersDTO"
		resultMap="getRoleResult">
		SELECT LM.NUM, LM.USERNAME,LM.PASSWORD, LM.NAME, LR.ROLENUM,AR.ROLENAME
		FROM 
		    LiCENSEMEMBERS LM
		    INNER JOIN
		    LICENSEROLE LR
		    ON (LM.USERNAME = LR.USERNAME)
		    	INNER JOIN
		   		 ADMINROLE AR
		  		  ON (LR.ROLENUM = AR.ROLENUM)
		WHERE LM.USERNAME=#{userName}
		ORDER BY AR.ROLENUM ASC
	</select>
	
	<select id="getPwdCheck" parameterType="LicenseMembersDTO"
		resultMap="getRoleResult">
		SELECT LM.NUM, LM.USERNAME,LM.PASSWORD, LM.NAME, LR.ROLENUM,AR.ROLENAME
		FROM 
		    LiCENSEMEMBERS LM
		    INNER JOIN
		    LICENSEROLE LR
		    ON (LM.USERNAME = LR.USERNAME)
		    	INNER JOIN
		   		 ADMINROLE AR
		  		  ON (LR.ROLENUM = AR.ROLENUM)
		WHERE LM.USERNAME=#{userName}
		ORDER BY AR.ROLENUM ASC
	</select>
	
	<select id="getMemberList" parameterType="LicenseMembersDTO"
		resultMap="getRoleResult1">
		SELECT LM.NUM, LM.USERNAME,LM.NAME,LM.EMAIL,LM.PHONE, LR.ROLENUM,AR.ROLENAME
		FROM 
		    LiCENSEMEMBERS LM
		    INNER JOIN
		    LICENSEROLE LR
		    ON (LM.USERNAME = LR.USERNAME)
		    	INNER JOIN
		   		 ADMINROLE AR
		  		  ON (LR.ROLENUM = AR.ROLENUM)
		ORDER BY AR.ROLENUM ASC
	</select>
	
	
	
	<update id="modifyInfo" parameterType="LicenseMembersDTO" >
	    UPDATE LICENSEMEMBERS SET
	    
	    <if test="valueType == 'password'">
	        PASSWORD = #{value }
	    </if>
	    
	    <if test="valueType == 'nickname'">
	        NAME = #{value }		
	    </if>
	    
	    <if test="valueType == 'phone'">
	        PHONE = #{value }		
	    </if>
	    WHERE	USERNAME = #{userName} 
	</update>

	<resultMap type="LicenseMembersDTO" id="getRoleResult1">
    	<id column="USERNAME" property="userName"></id>
    	<result column="NUM" property="num"></result>
		<result column="NAME" property="name"></result>
		<result column="EMAIL" property="email"></result>
		<result column="PHONE" property="phone"></result>
		
		<collection property="adminRoleDTOs" javaType="List" ofType="AdminRoleDTO">
			<id column="ROLENUM" property="roleNum"></id>
			<result column="ROLENAME" property="roleName"></result>
			
		</collection> 
    </resultMap>
	
	<resultMap type="LicenseMembersDTO" id="getRoleResult">
    	<id column="USERNAME" property="userName"></id>
    	<result column="NUM" property="num"></result>
		<result column="NAME" property="name"></result>
		<result column="PASSWORD" property="password"></result>
		
		<collection property="adminRoleDTOs" javaType="List" ofType="AdminRoleDTO">
			<id column="ROLENUM" property="roleNum"></id>
			<result column="ROLENAME" property="roleName"></result>
			
		</collection> 
    </resultMap>


</mapper>
